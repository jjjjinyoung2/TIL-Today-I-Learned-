//문제 : 정수를 요소로 갖는 배열을 입력받아 오름차순으로 정렬하여 리턴해야 합니다.
//버블 정렬(bubble sort)은 여러 정렬 알고리즘(삽입 정렬, 퀵 정렬, 병합 정렬, 기수 정렬 등) 중 가장 기본적인 알고리즘입니다.
// 버블 정렬 알고리즘은 아래와 같습니다.
// 첫 번째 요소가 두 번째 요소보다 크면, 두 요소의 위치를 바꿉니다. (swap)
// 두 번째 요소와 세 번째 요소보다 크면, 두 요소의 위치를 바꿉니다. (swap)
// 1, 2를 마지막까지 반복합니다. (마지막에서 두 번째 요소와 마지막 요소를 비교)
// 1~3의 과정을 한 번 거치게 되면, 가장 큰 요소가 배열의 마지막으로 밀려납니다.
// 1~3의 과정을 첫 요소부터 다시 반복합니다.
// 5를 통해 두 번째로 큰 요소가 배열의 마지막 바로 두 번째로 밀려납니다.
// 1~3의 과정을 총 n번(배열의 크기) 반복합니다.
// 이 모습이 마치 '거품이 밀려 올라가는 것과 같은 모습'과 같아서 bubble sort라고 부릅니다.
//입력 : 인자 1 : arr / number 타입을 요소로 갖는 배열 / arr[i]는 정수 / arr[i]의 길이는 1,000 이하
//출력 : number 타입을 요소로 갖는 배열을 리턴해야 합니다. / 배열의 요소는 오름차순으로 정렬되어야 합니다. / arr[i] <= arr[j] (i < j)
//주의사항 : 위에서 설명한 알고리즘을 구현해야 합니다. / arr.sort 사용은 금지됩니다. / 입력으로 주어진 배열은 중첩되지 않은 1차원 배열입니다.
// 수도코드
//sort 사용안하고 bubble처럼 순차적으로 계산
//for문으로 배열돌기 이중for문으로 배열안에 비교
//처음 한바퀴 다 돌면 첫 for문으로 진행
//전부 완료되면 break
// TODO: 여기에 코드를 작성합니다.
const bubbleSort = function (arr) {
  //arr길이를 가진 변수 생성
  let n = arr.length;
  //전체순환for문생성
  for (let i = 0; i < n; i++) {
    //[2,1]일경우 앞의 요소 값을 저장해줄 변수 swap 생성
    let swap = 0;
    //배열 요소를 비교하기 위한 for문 생성
    //j<n-i인 이유는 -1은 for문내에서 arr[j+1]로 마지막 요소까지 부르기 때문
    //-i는 이미 진행이 완료된 부분은 다시 할 필요가 없기 때문
    //ex>[1,10,4,3] 첫 순환시 [1,4,3,10]이 된다.
    //다음 i가 1이 되며 다시 for 문을 돌 때
    //굳이 마지막에 있는 10 까지 갈필요가 없기 때문에 n-1-i를 해준다.
    for (let j = 0; j < n - 1 - i; j++) {
      //arr[j]>arr[j+1]일 경우 swap을 통해 서로의 값을 바꾼다.
      if (arr[j] > arr[j + 1]) {
        swap = arr[j];
        arr[j] = arr[j + 1];
        arr[j + 1] = swap;
      }
    }
    //break가 없다면 loop가 이어져 실행초과가 됨
    if (!swap) break;
  }
  return arr;
};
